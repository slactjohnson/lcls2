platform = '7'
username = 'lcls2'

epics_host = 'daq-tst-dev03'

conda_rel = 'ps-3.1.11'
epics_env = 'EPICS_PVA_ADDR_LIST=172.21.151.255'

hutch = 'tst'

drp_nodes = ['002','003','004','005','008','009','011','013','014','015','017','018']

pyxpm_optsdb = '--db https://pswww.slac.stanford.edu/ws-auth/devconfigdb/ws/,configDB,tst,PROD -P DAQ:LAB2:XPM:%d'
pyxpm_opts = '-P DAQ:LAB2:XPM:%d'

# procmgr FLAGS: <port number> static port number to keep executable
#                              running across multiple start/stop commands.
#                "X" open xterm
#                "s" send signal to child when stopping
#
# HOST       UNIQUEID      FLAGS  COMMAND+ARGS
# list of processes to run
#   required fields: id, cmd
#   optional fields: host, port, flags, conda, env, rtprio
#     flags:
#        'x' or 'X'  -> xterm: open small or large xterm for process console
#        's'         -> stop: sends ctrl-c to process
#        'u'         -> uniqueid: use 'id' as detector alias (supported by acq, cam, camedt, evr, and simcam)

procmgr_config = [
 { host: epics_host,  id:'pyxpm-2'  , port:'29451', flags:'s', conda:conda_rel, env:epics_env, cmd:'pyxpm --ip 10.0.2.102 '+pyxpm_optsdb%2},
 { host: epics_host,  id:'pyxpm-1'  , port:'29452', flags:'s', conda:conda_rel, env:epics_env, cmd:'pyxpm --ip 10.0.1.103 '+pyxpm_opts%1},
 { host: epics_host,  id:'pyxpm-3'  , port:'29453', flags:'s', conda:conda_rel, env:epics_env, cmd:'pyxpm --ip 10.0.2.107 '+pyxpm_opts%3},

## EPICS camera
 { host: epics_host,  id:'pvcamcas', port:'29465', flags:'s', conda:conda_rel, env:epics_env, cmd:'campvs -P DAQ:LAB2:PVCAM'},
 { host: 'daq-tst-dev03',  id:'pvcam', port:'29466', flags:'s', conda:conda_rel, env:epics_env, cmd:'pvcam -p DAQ:LAB2:PVCAM'},

## EPICS PV exporter
 {                    id:'pvrtmon',  port:'29467', flags:'s', conda:conda_rel, env:epics_env, cmd:'epics_exporter -H '+hutch+' -P DAQ:LAB2:XPM:2 RunTime Run NumL0Acc L0AccRate NumL0Inp L0InpRate DeadFrac'},
  ]

for n in drp_nodes:
    procmgr_config.append({host:'drp-tst-dev'+n, id:'pykcu-'+n, port:'29451', flags:'s', conda:conda_rel, env:epics_env, cmd:'pykcu'})
