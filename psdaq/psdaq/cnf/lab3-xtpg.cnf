platform = '5'
username = 'lcls2'

epics_host = 'daq-tst-dev02'

conda_rel = 'ps-2.0.3'
epics_env = 'EPICS_PVA_ADDR_LIST=172.21.151.255'

shelf = '3'

# procmgr FLAGS: <port number> static port number to keep executable
#                              running across multiple start/stop commands.
#                "X" open xterm
#                "s" send signal to child when stopping
#
# HOST       UNIQUEID      FLAGS  COMMAND+ARGS
# list of processes to run
#   required fields: id, cmd
#   optional fields: host, port, flags, conda, env, rtprio
#     flags:
#        'x' or 'X'  -> xterm: open small or large xterm for process console
#        's'         -> stop: sends ctrl-c to process
#        'u'         -> uniqueid: use 'id' as detector alias (supported by acq, cam, camedt, evr, and simcam)

procmgr_config = [
 { host: epics_host,  id:'xpmpvas' , port:'29551', flags:'s', conda:conda_rel, env:epics_env, cmd:'xpmpvas -P DAQ:LAB2:XPM:'+shelf},
 {                    id:'xpmpva'  ,               flags:'s', conda:conda_rel, env:epics_env, cmd:'xpmpva -x DAQ:LAB2:XPM:'+shelf},
 {                    id:'xpmioc' , port:'29572', flags:'s', conda:conda_rel, env:epics_env, cmd:'xpmPVs -a 10.0.3.104 -P DAQ:LAB2'},

 {                    id:'partca' ,               flags:'s', conda:conda_rel, env:epics_env, cmd:'partca -x DAQ:LAB2:PART:5'},

## procstat
 {                    id:'procstat', flags:'p', conda:conda_rel, cmd:'procstat -t '+username+' -e0 -n none p'+platform+'.cnf.last'},
  ]
